[{"id":"c926aee6.0eb168","type":"group","z":"bac0ac5d.f875f","name":"Universal Triggers","style":{"label":true},"nodes":["8155ceb1.ae44c","17cdd76f.93fed9","4aa45553.fc6924","bbdd48f6.8dabf","533000bf.71eb4","5b77f6d9.a2302","34fba37f.3a4c8c","2186963b.f26d0a","4885807a.f44188","c0b30b7a.3fce4","22489e87.8e4dc2","9c4a418aa9022708","e8aeb5dac6b74e56","0b6dada762086a98","e4573fe24f0b0a46","c91fe279e00e94d3","de34345dbdf6dbac"],"x":14,"y":19,"w":1172,"h":262},{"id":"8155ceb1.ae44c","type":"link out","z":"bac0ac5d.f875f","g":"c926aee6.0eb168","name":"Bypass Checks","links":["f0b8d6bc.f13a8"],"x":1080,"y":240,"wires":[],"l":true},{"id":"17cdd76f.93fed9","type":"api-current-state","z":"bac0ac5d.f875f","g":"c926aee6.0eb168","name":"Queued Empty?","server":"a9289a5f.5ca3f8","version":2,"outputs":2,"halt_if":"0","halt_if_type":"num","halt_if_compare":"is","entity_id":"counter.vacuum_{{vacuum_name}}_cleaning_queue","state_type":"num","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"x":780,"y":140,"wires":[["c0b30b7a.3fce4"],["8155ceb1.ae44c"]],"info":"If there are any room clean requests in the vacuum's queue, bypass the normal flow to trigger the vacuum immediately."},{"id":"4aa45553.fc6924","type":"switch","z":"bac0ac5d.f875f","g":"c926aee6.0eb168","name":"","property":"vacuum_name","propertyType":"msg","rules":[{"t":"eq","v":"roborock_shadow","vt":"str"},{"t":"eq","v":"roborock_maxine","vt":"str"},{"t":"eq","v":"roborock_rose","vt":"str"}],"checkall":"true","repair":false,"outputs":3,"x":1030,"y":140,"wires":[["533000bf.71eb4"],["5b77f6d9.a2302"],["34fba37f.3a4c8c"]]},{"id":"bbdd48f6.8dabf","type":"server-state-changed","z":"bac0ac5d.f875f","g":"c926aee6.0eb168","name":"Cleaning Queue","server":"a9289a5f.5ca3f8","version":3,"exposeToHomeAssistant":false,"haConfig":[{"property":"name","value":""},{"property":"icon","value":""}],"entityidfilter":"counter\\..*_cleaning_queue","entityidfiltertype":"regex","outputinitially":false,"state_type":"num","haltifstate":"1","halt_if_type":"num","halt_if_compare":"is","outputs":2,"output_only_on_state_change":true,"for":"","forType":"num","forUnits":"seconds","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"queue","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"eventData"},{"property":"vacuum_name","propertyType":"msg","value":"","valueType":"triggerId"}],"x":140,"y":120,"wires":[["2186963b.f26d0a"],[]],"info":"Triggers the vacuum to immediately clean the currently dirtiest room, even if it is not above 1.00 debris level. \n\nMultiple queues will cause the vacuum to clean multiple rooms.\n\nWe only want this to trigger a cleaning while the vacuum isn't busy. If there are already items in the queue, the vacuum is busy."},{"id":"533000bf.71eb4","type":"link out","z":"bac0ac5d.f875f","g":"c926aee6.0eb168","name":"","links":["dc37add0.2c4f8"],"x":1135,"y":100,"wires":[]},{"id":"5b77f6d9.a2302","type":"link out","z":"bac0ac5d.f875f","g":"c926aee6.0eb168","name":"","links":["8aa85f65.184808"],"x":1135,"y":140,"wires":[]},{"id":"34fba37f.3a4c8c","type":"link out","z":"bac0ac5d.f875f","g":"c926aee6.0eb168","name":"","links":["1f21bef4.535e81"],"x":1135,"y":180,"wires":[]},{"id":"2186963b.f26d0a","type":"function","z":"bac0ac5d.f875f","g":"c926aee6.0eb168","name":"Determine vacuum","func":"// Determines which vacuum is making the check. \n// If it is from the inject cycle, all vacuums are checked.\n\nif (msg.vacuum_name) {\n    // Remove parts from vacuum.[vacuum_name]\n    msg.vacuum_name = msg.vacuum_name.replace(\"vacuum.\",\"\")\n    // Remove parts from counter.[vacuum_name]_cleaning_queue\n    msg.vacuum_name = msg.vacuum_name.replace(\"counter.\",\"\").replace(\"_cleaning_queue\",\"\")\n    // Remove parts from sensor.debris_[vacuum_name]_next_room\n    msg.vacuum_name = msg.vacuum_name.replace(\"sensor.debris_\",\"\").replace(\"_next_room\",\"\")\n    msg.vacuum_name = msg.vacuum_name.replace(\"vacuum_\",\"\")\n} else {\n    // try each vacuum\n    // Change me to your vacuum names! Leave out \"vacuum.\" from the entity name\n    var msg1 = { vacuum_name:\"roborock_shadow\" }; \n    var msg2 = { vacuum_name:\"roborock_maxine\" };\n    var msg3 = { vacuum_name:\"roborock_rose\" };\n    return [ [msg1, msg2, msg3] ];\n} \n// Only \n// If this is from a cleaning queue, only trigger cleaning on the first click.\nif (msg.queue) {\n    if (msg.data.old_state.state == 0) {\n        return msg;\n    } else { \n        return null; \n    }\n} else { return msg; }\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":370,"y":140,"wires":[["de34345dbdf6dbac"]]},{"id":"4885807a.f44188","type":"inject","z":"bac0ac5d.f875f","g":"c926aee6.0eb168","name":"","props":[{"p":"All_vacuums","v":"true","vt":"bool"}],"repeat":"300","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":110,"y":60,"wires":[["0b6dada762086a98"]],"info":"Check all vacuums every 5 minutes. If a room needs cleaning and the area is available for cleaning, do it!"},{"id":"c0b30b7a.3fce4","type":"api-current-state","z":"bac0ac5d.f875f","g":"c926aee6.0eb168","name":"Home?","server":"a9289a5f.5ca3f8","version":2,"outputs":2,"halt_if":"on","halt_if_type":"str","halt_if_compare":"is","entity_id":"input_boolean.location_home","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":915,"y":140,"wires":[["4aa45553.fc6924"],["8155ceb1.ae44c"]],"icon":"font-awesome/fa-home","l":false,"info":"If this is a location-away trigger, go ahead and clean. Otherwise, check each vacuum for valid cleaning rules"},{"id":"22489e87.8e4dc2","type":"link in","z":"bac0ac5d.f875f","g":"c926aee6.0eb168","name":"Returning","links":["59c8b3d1.703a0c"],"x":160,"y":180,"wires":[["2186963b.f26d0a"]],"l":true,"info":"Vacuum should check if it needs to clean another room."},{"id":"9c4a418aa9022708","type":"comment","z":"bac0ac5d.f875f","g":"c926aee6.0eb168","name":"Read Me!","info":"Triggers the vacuum cleaning.\n\nThe inject causes the vacuum to check if it needs to run every 5 minutes. The vacuum also automatically checks when it is returning to the dock. These two checks go through the restrictions you set up, such as an area being inactive for a time or everyone being in bed. \n\nFor my routines, I want all of the vacuums to clean if necessary when I leave. I have an input_boolean for tracking if we are home or not. It is set to off when everyone leaves, and this bypasses the normal checks and has the vacuums clean all the rooms that need it.\n\nCleaning queue also bypasses checks. Later in the flow it uses a less restricted method to determine which room to clean.\n\n\n\n### Please check the comments on the function nodes to see if you need to edit them for your devices ###","x":480,"y":80,"wires":[]},{"id":"e8aeb5dac6b74e56","type":"server-state-changed","z":"bac0ac5d.f875f","g":"c926aee6.0eb168","name":"Location Away","server":"a9289a5f.5ca3f8","version":3,"exposeToHomeAssistant":false,"haConfig":[{"property":"name","value":""},{"property":"icon","value":""}],"entityidfilter":"input_boolean.location_home","entityidfiltertype":"exact","outputinitially":false,"state_type":"str","haltifstate":"off","halt_if_type":"str","halt_if_compare":"is","outputs":2,"output_only_on_state_change":true,"for":0,"forType":"num","forUnits":"minutes","ignorePrevStateNull":false,"ignorePrevStateUnknown":false,"ignorePrevStateUnavailable":false,"ignoreCurrentStateUnknown":false,"ignoreCurrentStateUnavailable":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"","valueType":"triggerId"}],"x":140,"y":240,"wires":[["2186963b.f26d0a"],[]],"info":"Bypasses the parameter check to start the vacuum when everyone leaves the house."},{"id":"0b6dada762086a98","type":"api-current-state","z":"bac0ac5d.f875f","g":"c926aee6.0eb168","name":"Home?","server":"a9289a5f.5ca3f8","version":2,"outputs":2,"halt_if":"on","halt_if_type":"str","halt_if_compare":"is","entity_id":"input_boolean.location_home","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":195,"y":60,"wires":[["2186963b.f26d0a"],[]],"icon":"font-awesome/fa-home","l":false,"info":"Prevents the inject from checking room states while the house is empty. This is to prevent pet accidents from being spread by the vacuums."},{"id":"e4573fe24f0b0a46","type":"comment","z":"bac0ac5d.f875f","g":"c926aee6.0eb168","name":"Edit this switch","info":"This switch points to each vacuum's parameters for cleaning. Your parameters will be different from mine, so you will have to connect a link-in node to each link-out and adjust the switch to your vacuum names.","x":1020,"y":60,"wires":[]},{"id":"c91fe279e00e94d3","type":"api-current-state","z":"bac0ac5d.f875f","g":"c926aee6.0eb168","name":"Cleaning?","server":"a9289a5f.5ca3f8","version":2,"outputs":2,"halt_if":"cleaning, error","halt_if_type":"str","halt_if_compare":"includes","entity_id":"vacuum.{{vacuum_name}}","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"x":610,"y":140,"wires":[[],["17cdd76f.93fed9"]],"info":"Decreasing the cleaning queue causes a new flow to trigger. "},{"id":"de34345dbdf6dbac","type":"delay","z":"bac0ac5d.f875f","g":"c926aee6.0eb168","name":"","pauseType":"rate","timeout":"500","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"5","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"x":495,"y":140,"wires":[["c91fe279e00e94d3"]],"l":false,"info":"Gives the vacuum a chance to report its cleaning state so it can potentially ignore changes if it is already cleaning or errored."},{"id":"a9289a5f.5ca3f8","type":"server","name":"Aldersgate","version":1,"legacy":false,"addon":true,"rejectUnauthorizedCerts":true,"ha_boolean":"y|yes|true|on|home|open","connectionDelay":true,"cacheJson":true}]
